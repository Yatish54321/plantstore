{"ast":null,"code":"var _jsxFileName = \"D:\\\\Assignment\\\\project-root\\\\client\\\\src\\\\App.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState, useRef } from \"react\";\nimport Toolbar from \"./components/Toolbar\";\nimport PlantCard from \"./components/PlantCard\";\nimport ModalForm from \"./components/ModalForm\";\nimport Toast from \"./components/Toast\";\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst API = process.env.REACT_APP_API_BASE_URL || \"/api\";\nfunction fetchJSON(url, opt) {\n  return fetch(url, opt).then(res => {\n    if (!res.ok) throw new Error('HTTP ' + res.status);\n    return res.json();\n  });\n}\nexport default function App() {\n  _s();\n  const [plants, setPlants] = useState([]);\n  const [categories, setCategories] = useState([]);\n  const [loading, setLoading] = useState(false);\n  const [mongoState, setMongoState] = useState('checkingâ€¦');\n  const [toastMsg, setToastMsg] = useState('');\n  const [modalOpen, setModalOpen] = useState(false);\n  const [editPlant, setEditPlant] = useState(null);\n  const [filters, setFilters] = useState({\n    search: '',\n    category: '',\n    inStock: '',\n    sort: ''\n  });\n  const toolbarRef = useRef(null);\n  async function loadHealth() {\n    try {\n      const h = await fetchJSON(API + '/health');\n      setMongoState(h.mongo ? 'Connected' : 'Not Connected (Memory)');\n    } catch (e) {\n      setMongoState('Unknown');\n    }\n  }\n  async function loadCategories() {\n    try {\n      const data = await fetchJSON(API + '/categories');\n      setCategories(data.categories || []);\n    } catch (e) {\n      console.error(e);\n    }\n  }\n\n  // load sample (no-op if backend doesn't expect)\n  async function loadSample() {\n    try {\n      await fetch(API + '/plants/sample', {\n        method: 'POST'\n      }).catch(() => {});\n    } catch (e) {}\n  }\n  function applyClientSort(arr, sortVal) {\n    const copy = [...arr];\n    if (sortVal === 'priceAsc') copy.sort((a, b) => (a.price || 0) - (b.price || 0));else if (sortVal === 'priceDesc') copy.sort((a, b) => (b.price || 0) - (a.price || 0));else if (sortVal === 'nameAsc') copy.sort((a, b) => (a.name || '').localeCompare(b.name || ''));else if (sortVal === 'nameDesc') copy.sort((a, b) => (b.name || '').localeCompare(a.name || ''));\n    return copy;\n  }\n  async function loadPlants(opts = {}) {\n    setLoading(true);\n    try {\n      var _opts$search, _opts$category, _opts$inStock, _opts$sort;\n      const q = {\n        search: (_opts$search = opts.search) !== null && _opts$search !== void 0 ? _opts$search : filters.search,\n        category: (_opts$category = opts.category) !== null && _opts$category !== void 0 ? _opts$category : filters.category,\n        inStock: (_opts$inStock = opts.inStock) !== null && _opts$inStock !== void 0 ? _opts$inStock : filters.inStock\n      };\n      const params = new URLSearchParams();\n      if (q.search) params.append('search', q.search);\n      if (q.category) params.append('category', q.category);\n      if (q.inStock) params.append('inStock', q.inStock);\n      const data = await fetchJSON(API + '/plants?' + params.toString());\n      let list = data.plants || [];\n      list = applyClientSort(list, (_opts$sort = opts.sort) !== null && _opts$sort !== void 0 ? _opts$sort : filters.sort);\n      setPlants(list);\n    } catch (e) {\n      console.error(e);\n      setPlants([]);\n    } finally {\n      setLoading(false);\n    }\n  }\n  useEffect(() => {\n    // init\n    loadHealth();\n    loadCategories();\n    loadSample();\n    loadPlants();\n    // sticky toolbar behavior\n    const onScroll = () => {\n      const toolbar = toolbarRef.current;\n      const header = document.querySelector('header');\n      if (!toolbar || !header) return;\n      if (window.scrollY > header.offsetHeight) toolbar.classList.add('sticky');else toolbar.classList.remove('sticky');\n    };\n    document.addEventListener('scroll', onScroll);\n    return () => document.removeEventListener('scroll', onScroll);\n  }, []);\n\n  // If filters change, reload, debounced for search\n  useEffect(() => {\n    const id = setTimeout(() => loadPlants(filters), 220);\n    return () => clearTimeout(id);\n  }, [filters]);\n  function openAddModal() {\n    setEditPlant(null);\n    setModalOpen(true);\n  }\n  function openEditModal(p) {\n    setEditPlant(p);\n    setModalOpen(true);\n  }\n  async function handleDelete(plant) {\n    if (!confirm('Delete plant?')) return;\n    try {\n      await fetchJSON(API + '/plants/' + (plant._id || plant.id), {\n        method: 'DELETE'\n      });\n      setToastMsg('Deleted');\n      loadPlants();\n    } catch (e) {\n      console.error(e);\n      setToastMsg('Delete failed');\n    }\n  }\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"header\", {\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"header-container container\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"brand\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"logo\",\n            children: \"\\uD83C\\uDF3F\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 135,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"brand-text\",\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"brand-title\",\n              children: \"Urvann Mini Plant Store\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 137,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"brand-sub\",\n              children: \"Bringing greenery closer to you\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 138,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 136,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 134,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n          className: \"pill\",\n          children: [\"Mongo: \", /*#__PURE__*/_jsxDEV(\"strong\", {\n            id: \"mongoState\",\n            children: mongoState\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 141,\n            columnNumber: 41\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 141,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 133,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 132,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"main\", {\n      className: \"container\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"toolbar\",\n        ref: toolbarRef,\n        role: \"region\",\n        \"aria-label\": \"Filters and actions\",\n        children: /*#__PURE__*/_jsxDEV(Toolbar, {\n          categories: categories,\n          onFilter: next => setFilters(prev => ({\n            ...prev,\n            ...next\n          })),\n          onAdd: openAddModal,\n          currentSort: filters.sort,\n          onSort: s => setFilters(prev => ({\n            ...prev,\n            sort: s\n          }))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 147,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 146,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        id: \"status\",\n        className: \"brand-sub\",\n        style: {\n          marginTop: 8\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 156,\n        columnNumber: 9\n      }, this), loading ? /*#__PURE__*/_jsxDEV(\"div\", {\n        id: \"grid\",\n        className: \"grid\",\n        \"aria-live\": \"polite\",\n        children: Array.from({\n          length: 8\n        }).map((_, i) => /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"card skeleton\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"img skel\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 162,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"line skel\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 163,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"line skel\",\n            style: {\n              width: '60%'\n            }\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 164,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"line skel\",\n            style: {\n              width: '40%'\n            }\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 165,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"line skel\",\n            style: {\n              width: '80%'\n            }\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 166,\n            columnNumber: 17\n          }, this)]\n        }, i, true, {\n          fileName: _jsxFileName,\n          lineNumber: 161,\n          columnNumber: 15\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 159,\n        columnNumber: 11\n      }, this) : /*#__PURE__*/_jsxDEV(_Fragment, {\n        children: plants.length === 0 ? /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"empty\",\n          children: \"No plants found. Try clearing filters.\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 173,\n          columnNumber: 15\n        }, this) : /*#__PURE__*/_jsxDEV(\"div\", {\n          id: \"grid\",\n          className: \"grid\",\n          \"aria-live\": \"polite\",\n          children: plants.map(p => /*#__PURE__*/_jsxDEV(PlantCard, {\n            plant: p,\n            onEdit: () => openEditModal(p),\n            onDelete: () => handleDelete(p)\n          }, p._id || p.id, false, {\n            fileName: _jsxFileName,\n            lineNumber: 177,\n            columnNumber: 19\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 175,\n          columnNumber: 15\n        }, this)\n      }, void 0, false)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 145,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"footer\", {\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"footer-container\",\n        children: [/*#__PURE__*/_jsxDEV(\"span\", {\n          className: \"footer-brand\",\n          children: \"Urvann\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 193,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n          id: \"count\",\n          className: \"footer-count\",\n          children: [plants.length, \" plant(s)\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 194,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 192,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 191,\n      columnNumber: 7\n    }, this), modalOpen && /*#__PURE__*/_jsxDEV(ModalForm, {\n      plant: editPlant,\n      onClose: () => {\n        setModalOpen(false);\n        setEditPlant(null);\n      },\n      onSaved: () => {\n        setToastMsg(editPlant ? 'Updated' : 'Added');\n        setModalOpen(false);\n        setEditPlant(null);\n        loadPlants();\n        loadSample();\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 199,\n      columnNumber: 9\n    }, this), toastMsg && /*#__PURE__*/_jsxDEV(Toast, {\n      message: toastMsg,\n      onClose: () => setToastMsg('')\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 212,\n      columnNumber: 20\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 131,\n    columnNumber: 5\n  }, this);\n}\n_s(App, \"WzNtwah7nf/5uBLTXFW37WUT8JM=\");\n_c = App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useEffect","useState","useRef","Toolbar","PlantCard","ModalForm","Toast","jsxDEV","_jsxDEV","Fragment","_Fragment","API","process","env","REACT_APP_API_BASE_URL","fetchJSON","url","opt","fetch","then","res","ok","Error","status","json","App","_s","plants","setPlants","categories","setCategories","loading","setLoading","mongoState","setMongoState","toastMsg","setToastMsg","modalOpen","setModalOpen","editPlant","setEditPlant","filters","setFilters","search","category","inStock","sort","toolbarRef","loadHealth","h","mongo","e","loadCategories","data","console","error","loadSample","method","catch","applyClientSort","arr","sortVal","copy","a","b","price","name","localeCompare","loadPlants","opts","_opts$search","_opts$category","_opts$inStock","_opts$sort","q","params","URLSearchParams","append","toString","list","onScroll","toolbar","current","header","document","querySelector","window","scrollY","offsetHeight","classList","add","remove","addEventListener","removeEventListener","id","setTimeout","clearTimeout","openAddModal","openEditModal","p","handleDelete","plant","confirm","_id","children","className","fileName","_jsxFileName","lineNumber","columnNumber","ref","role","onFilter","next","prev","onAdd","currentSort","onSort","s","style","marginTop","Array","from","length","map","_","i","width","onEdit","onDelete","onClose","onSaved","message","_c","$RefreshReg$"],"sources":["D:/Assignment/project-root/client/src/App.js"],"sourcesContent":["import React, { useEffect, useState, useRef } from \"react\";\r\nimport Toolbar from \"./components/Toolbar\";\r\nimport PlantCard from \"./components/PlantCard\";\r\nimport ModalForm from \"./components/ModalForm\";\r\nimport Toast from \"./components/Toast\";\r\n\r\nconst API = process.env.REACT_APP_API_BASE_URL || \"/api\";\r\n\r\nfunction fetchJSON(url, opt) {\r\n  return fetch(url, opt).then(res => {\r\n    if (!res.ok) throw new Error('HTTP ' + res.status);\r\n    return res.json();\r\n  });\r\n}\r\n\r\nexport default function App() {\r\n  const [plants, setPlants] = useState([]);\r\n  const [categories, setCategories] = useState([]);\r\n  const [loading, setLoading] = useState(false);\r\n  const [mongoState, setMongoState] = useState('checkingâ€¦');\r\n  const [toastMsg, setToastMsg] = useState('');\r\n  const [modalOpen, setModalOpen] = useState(false);\r\n  const [editPlant, setEditPlant] = useState(null);\r\n  const [filters, setFilters] = useState({ search: '', category: '', inStock: '', sort: '' });\r\n\r\n  const toolbarRef = useRef(null);\r\n\r\n  async function loadHealth() {\r\n    try {\r\n      const h = await fetchJSON(API + '/health');\r\n      setMongoState(h.mongo ? 'Connected' : 'Not Connected (Memory)');\r\n    } catch (e) {\r\n      setMongoState('Unknown');\r\n    }\r\n  }\r\n\r\n  async function loadCategories(){\r\n    try {\r\n      const data = await fetchJSON(API + '/categories');\r\n      setCategories(data.categories || []);\r\n    } catch (e) {\r\n      console.error(e);\r\n    }\r\n  }\r\n\r\n  // load sample (no-op if backend doesn't expect)\r\n  async function loadSample() {\r\n    try { await fetch(API + '/plants/sample', { method: 'POST' }).catch(()=>{}); } catch(e){}\r\n  }\r\n\r\n  function applyClientSort(arr, sortVal){\r\n    const copy = [...arr];\r\n    if(sortVal === 'priceAsc') copy.sort((a,b)=>(a.price||0)-(b.price||0));\r\n    else if(sortVal === 'priceDesc') copy.sort((a,b)=>(b.price||0)-(a.price||0));\r\n    else if(sortVal === 'nameAsc') copy.sort((a,b)=>(a.name||'').localeCompare(b.name||''));\r\n    else if(sortVal === 'nameDesc') copy.sort((a,b)=>(b.name||'').localeCompare(a.name||''));\r\n    return copy;\r\n  }\r\n\r\n  async function loadPlants(opts = {}) {\r\n    setLoading(true);\r\n    try {\r\n      const q = {\r\n        search: opts.search ?? filters.search,\r\n        category: opts.category ?? filters.category,\r\n        inStock: opts.inStock ?? filters.inStock\r\n      };\r\n      const params = new URLSearchParams();\r\n      if (q.search) params.append('search', q.search);\r\n      if (q.category) params.append('category', q.category);\r\n      if (q.inStock) params.append('inStock', q.inStock);\r\n\r\n      const data = await fetchJSON(API + '/plants?' + params.toString());\r\n      let list = data.plants || [];\r\n      list = applyClientSort(list, opts.sort ?? filters.sort);\r\n      setPlants(list);\r\n    } catch (e) {\r\n      console.error(e);\r\n      setPlants([]);\r\n    } finally {\r\n      setLoading(false);\r\n    }\r\n  }\r\n\r\n  useEffect(() => {\r\n    // init\r\n    loadHealth();\r\n    loadCategories();\r\n    loadSample();\r\n    loadPlants();\r\n    // sticky toolbar behavior\r\n    const onScroll = () => {\r\n      const toolbar = toolbarRef.current;\r\n      const header = document.querySelector('header');\r\n      if (!toolbar || !header) return;\r\n      if (window.scrollY > header.offsetHeight) toolbar.classList.add('sticky');\r\n      else toolbar.classList.remove('sticky');\r\n    };\r\n    document.addEventListener('scroll', onScroll);\r\n    return () => document.removeEventListener('scroll', onScroll);\r\n  }, []);\r\n\r\n  // If filters change, reload, debounced for search\r\n  useEffect(() => {\r\n    const id = setTimeout(() => loadPlants(filters), 220);\r\n    return () => clearTimeout(id);\r\n  }, [filters]);\r\n\r\n  function openAddModal() {\r\n    setEditPlant(null);\r\n    setModalOpen(true);\r\n  }\r\n  function openEditModal(p) {\r\n    setEditPlant(p);\r\n    setModalOpen(true);\r\n  }\r\n\r\n  async function handleDelete(plant) {\r\n    if (!confirm('Delete plant?')) return;\r\n    try {\r\n      await fetchJSON(API + '/plants/' + (plant._id || plant.id), { method: 'DELETE' });\r\n      setToastMsg('Deleted');\r\n      loadPlants();\r\n    } catch (e) {\r\n      console.error(e);\r\n      setToastMsg('Delete failed');\r\n    }\r\n  }\r\n\r\n  return (\r\n    <div>\r\n      <header>\r\n        <div className=\"header-container container\">\r\n          <div className=\"brand\">\r\n            <div className=\"logo\">ðŸŒ¿</div>\r\n            <div className=\"brand-text\">\r\n              <div className=\"brand-title\">Urvann Mini Plant Store</div>\r\n              <div className=\"brand-sub\">Bringing greenery closer to you</div>\r\n            </div>\r\n          </div>\r\n          <span className=\"pill\">Mongo: <strong id=\"mongoState\">{mongoState}</strong></span>\r\n        </div>\r\n      </header>\r\n\r\n      <main className=\"container\">\r\n        <div className=\"toolbar\" ref={toolbarRef} role=\"region\" aria-label=\"Filters and actions\">\r\n          <Toolbar\r\n            categories={categories}\r\n            onFilter={(next) => setFilters(prev => ({ ...prev, ...next }))}\r\n            onAdd={openAddModal}\r\n            currentSort={filters.sort}\r\n            onSort={(s) => setFilters(prev => ({...prev, sort: s}))}\r\n          />\r\n        </div>\r\n\r\n        <div id=\"status\" className=\"brand-sub\" style={{marginTop:8}}></div>\r\n\r\n        {loading ? (\r\n          <div id=\"grid\" className=\"grid\" aria-live=\"polite\">\r\n            {Array.from({length:8}).map((_,i)=>(\r\n              <div className=\"card skeleton\" key={i}>\r\n                <div className=\"img skel\"></div>\r\n                <div className=\"line skel\"></div>\r\n                <div className=\"line skel\" style={{width:'60%'}}></div>\r\n                <div className=\"line skel\" style={{width:'40%'}}></div>\r\n                <div className=\"line skel\" style={{width:'80%'}}></div>\r\n              </div>\r\n            ))}\r\n          </div>\r\n        ) : (\r\n          <>\r\n            {plants.length === 0 ? (\r\n              <div className=\"empty\">No plants found. Try clearing filters.</div>\r\n            ) : (\r\n              <div id=\"grid\" className=\"grid\" aria-live=\"polite\">\r\n                {plants.map(p => (\r\n                  <PlantCard\r\n                    key={p._id || p.id}\r\n                    plant={p}\r\n                    onEdit={() => openEditModal(p)}\r\n                    onDelete={() => handleDelete(p)}\r\n                  />\r\n                ))}\r\n              </div>\r\n            )}\r\n          </>\r\n        )}\r\n\r\n      </main>\r\n\r\n      <footer>\r\n        <div className=\"footer-container\">\r\n          <span className=\"footer-brand\">Urvann</span>\r\n          <span id=\"count\" className=\"footer-count\">{plants.length} plant(s)</span>\r\n        </div>\r\n      </footer>\r\n\r\n      {modalOpen && (\r\n        <ModalForm\r\n          plant={editPlant}\r\n          onClose={() => { setModalOpen(false); setEditPlant(null); }}\r\n          onSaved={() => {\r\n            setToastMsg(editPlant ? 'Updated' : 'Added');\r\n            setModalOpen(false);\r\n            setEditPlant(null);\r\n            loadPlants();\r\n            loadSample();\r\n          }}\r\n        />\r\n      )}\r\n\r\n      {toastMsg && <Toast message={toastMsg} onClose={() => setToastMsg('')} />}\r\n    </div>\r\n  );\r\n}\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}